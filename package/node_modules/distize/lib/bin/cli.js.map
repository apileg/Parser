{"version":3,"sources":["../../src/bin/cli.ts"],"sourcesContent":["#!/usr/bin/env node\n\nimport commandLineArgs from 'command-line-args'\nimport commandLineUsage from 'command-line-usage'\nimport ora, { Ora } from 'ora'\n\nimport { distize } from '../distize'\n\nconst cmdOptions = [\n  {\n    group: 'build',\n    name: 'src',\n    type: String,\n    multiple: true,\n    defaultOption: true,\n    defaultValue: [],\n  },\n\n  {\n    group: 'build',\n    name: 'help',\n    alias: 'h',\n    type: Boolean,\n    description: 'Display this usage info.',\n  },\n  {\n    group: 'build',\n    name: 'version',\n    alias: 'V',\n    type: Boolean,\n    description: 'Output the version number.',\n  },\n  {\n    group: 'build',\n    name: 'verbose',\n    alias: 'v',\n    type: Boolean,\n    description: 'Increase the verbosity of messages.',\n  },\n\n  {\n    group: 'build',\n    name: 'out',\n    alias: 'o',\n    type: String,\n    description:\n      'Copy all input files into an output directory.\\n[default: {bold dist}]',\n    defaultValue: 'dist',\n  },\n  {\n    group: 'build',\n    name: 'no-clean',\n    type: Boolean,\n    description: 'Without cleaning the output directory.',\n  },\n\n  {\n    group: 'modules',\n    name: 'no-files',\n    type: Boolean,\n    description: 'Run without copying files.',\n  },\n  {\n    group: 'modules',\n    name: 'no-modules',\n    type: Boolean,\n    description: 'Run without copying node_modules.',\n  },\n  {\n    group: 'modules',\n    name: 'module-path',\n    alias: 'M',\n    type: String,\n    description: 'Change node_modules path.',\n  },\n  {\n    group: 'modules',\n    name: 'dev',\n    alias: 'D',\n    type: Boolean,\n    description: 'Copy modules in devDependencies also.',\n  },\n]\n\nconst args = commandLineArgs(cmdOptions)._all\n\nif (args.version) {\n  console.log(`v${require('../../package.json').version}`) // eslint-disable-line @typescript-eslint/no-var-requires\n  process.exit(0)\n}\n\nif (args.help) {\n  const log = args.help ? console.log : console.error\n  log(\n    commandLineUsage([\n      { content: '{yellow Usage:}', raw: true },\n      {\n        content: ['$ distize <path ...> [options]'],\n      },\n      { content: '{yellow Synopsis:}', raw: true },\n      {\n        content: [\n          '$ distize [{bold --timeout} {underline ms}] {bold --src} {underline file} ...',\n          '$ distize {bold --help}',\n        ],\n      },\n      { content: '{yellow Options:}', raw: true },\n      {\n        hide: ['src'],\n        optionList: cmdOptions,\n        group: 'build',\n      },\n      { content: '{yellow Module Options:}', raw: true },\n      {\n        optionList: cmdOptions,\n        group: 'modules',\n      },\n    ]).replace(/^\\s+/, '')\n  )\n  process.exit(args.help ? 0 : 1)\n}\n\nconst cwd = process.cwd()\n\nconst app = distize({\n  src: args['no-files'] ? [] : args.src.length > 0 ? args.src : '.',\n  basePath: cwd,\n  out: args.out,\n  noClean: args['no-clean'],\n  modulePath: args['module-path'],\n  noModules: args['no-modules'],\n  dev: args.dev,\n})\n\nlet spinner = null as Ora | null\napp.on('progress', (name) => {\n  switch (name) {\n    case 'CLEAN': {\n      spinner?.succeed()\n      spinner = ora(`Clean old dist files, \"${args.out}\"`).start()\n      break\n    }\n    case 'COPY_SOURCE_FILES': {\n      spinner?.succeed()\n      spinner = ora('Copy source files').start()\n      break\n    }\n    case 'COPY_NODE_MODULES': {\n      spinner?.succeed()\n      spinner = ora('Copy node_modules').start()\n      break\n    }\n  }\n})\napp.on('done', () => {\n  spinner?.succeed()\n})\n\nif (args.verbose) {\n  app.on('copy', (src, dest) => {\n    console.log(\n      `> Copy file \"${src.replace(cwd, '').replace(/^\\/+/, '')}\" to \"${dest\n        .replace(cwd, '')\n        .replace(/^\\/+/, '')}\"`\n    )\n  })\n}\n"],"names":["cmdOptions","group","name","type","String","multiple","defaultOption","defaultValue","alias","Boolean","description","args","commandLineArgs","_all","version","console","log","require","process","exit","help","error","commandLineUsage","content","raw","hide","optionList","replace","cwd","app","distize","src","length","basePath","out","noClean","modulePath","noModules","dev","spinner","on","succeed","ora","start","verbose","dest"],"mappings":"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"}