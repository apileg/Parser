{"version":3,"sources":["../src/copy-node-modules.ts"],"sourcesContent":["import { resolve } from 'path'\n\nimport { copy, CopyOptions } from './utils/fs'\nimport { listPackagePaths, ListPackagesOptions } from './utils/npm'\n\nexport interface CopyNodeModulesOptions\n  extends CopyOptions,\n    ListPackagesOptions {\n  basePath?: string\n}\n\nexport function copyNodeModules(\n  dest: string,\n  options: CopyNodeModulesOptions = {}\n): Promise<void> {\n  if (!dest) {\n    throw new TypeError('Missing destination directory argument.')\n  }\n  const basePath = options.basePath\n    ? resolve(process.cwd(), options.basePath)\n    : process.cwd()\n\n  return listPackagePaths(options).then((pkgAbsPaths) => {\n    return pkgAbsPaths.reduce(\n      (carry, pkgAbsPath) =>\n        carry.then(() => {\n          return copy(\n            pkgAbsPath,\n            resolve(\n              basePath,\n              dest,\n              pkgAbsPath.slice(pkgAbsPath.indexOf('node_modules'))\n            )\n          )\n        }),\n      Promise.resolve()\n    )\n  })\n}\n"],"names":["copyNodeModules","dest","options","TypeError","basePath","resolve","process","cwd","listPackagePaths","then","pkgAbsPaths","reduce","carry","pkgAbsPath","copy","slice","indexOf","Promise"],"mappings":"AAAA;;;;QAWgBA,eAAe,GAAfA,eAAe;AAXP,IAAA,KAAM,WAAN,MAAM,CAAA;AAEI,IAAA,GAAY,WAAZ,YAAY,CAAA;AACQ,IAAA,IAAa,WAAb,aAAa,CAAA;AAQ5D,SAASA,eAAe,CAC7BC,IAAY,EAEG;QADfC,OAA+B,GAA/BA,+CAAoC,kBAAF,EAAE;IAEpC,IAAI,CAACD,IAAI,EAAE;QACT,MAAM,IAAIE,SAAS,CAAC,yCAAyC,CAAC,CAAA;KAC/D;IACD,IAAMC,QAAQ,GAAGF,OAAO,CAACE,QAAQ,GAC7BC,CAAAA,GAAAA,KAAO,AAAiC,CAAA,SAAhCC,OAAO,CAACC,GAAG,EAAE,EAAEL,OAAO,CAACE,QAAQ,CAAC,GACxCE,OAAO,CAACC,GAAG,EAAE;IAEjB,OAAOC,CAAAA,GAAAA,IAAgB,AAAS,CAAA,kBAARN,OAAO,CAAC,CAACO,IAAI,CAAC,SAACC,WAAW,EAAK;QACrD,OAAOA,WAAW,CAACC,MAAM,CACvB,SAACC,KAAK,EAAEC,UAAU;mBAChBD,KAAK,CAACH,IAAI,CAAC,WAAM;gBACf,OAAOK,CAAAA,GAAAA,GAAI,AAOV,CAAA,MANCD,UAAU,EACVR,CAAAA,GAAAA,KAAO,AAIN,CAAA,SAHCD,QAAQ,EACRH,IAAI,EACJY,UAAU,CAACE,KAAK,CAACF,UAAU,CAACG,OAAO,CAAC,cAAc,CAAC,CAAC,CACrD,CACF,CAAA;aACF,CAAC;SAAA,EACJC,OAAO,CAACZ,OAAO,EAAE,CAClB,CAAA;KACF,CAAC,CAAA;CACH"}