{"version":3,"sources":["../../src/utils/path.ts"],"sourcesContent":["import nodeGlob from 'glob'\n\nexport function glob(\n  pattern: string | string[],\n  options: nodeGlob.IOptions = {}\n): Promise<string[]> {\n  const patterns = Array.isArray(pattern) ? pattern : [pattern]\n  return Promise.all(\n    patterns.map(\n      (pattern) =>\n        new Promise<string[]>((resolve, reject) =>\n          nodeGlob(pattern, options, (err, matches) =>\n            err ? reject(err) : resolve(matches)\n          )\n        )\n    )\n  ).then((matches) => matches.reduce((carry, match) => carry.concat(match)))\n}\n"],"names":["glob","pattern","options","patterns","Array","isArray","Promise","all","map","resolve","reject","nodeGlob","err","matches","then","reduce","carry","match","concat"],"mappings":"AAAA;;;;QAEgBA,IAAI,GAAJA,IAAI;AAFC,IAAA,KAAM,kCAAN,MAAM,EAAA;;;;;;AAEpB,SAASA,IAAI,CAClBC,QAA0B,EAEP;QADnBC,OAA0B,GAA1BA,+CAA+B,kBAAF,EAAE;IAE/B,IAAMC,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAACJ,QAAO,CAAC,GAAGA,QAAO,GAAG;QAACA,QAAO;KAAC;IAC7D,OAAOK,OAAO,CAACC,GAAG,CAChBJ,QAAQ,CAACK,GAAG,CACV,SAACP,OAAO;eACN,IAAIK,OAAO,CAAW,SAACG,OAAO,EAAEC,MAAM;mBACpCC,CAAAA,GAAAA,KAAQ,AAEP,CAAA,SAFQV,OAAO,EAAEC,OAAO,EAAE,SAACU,GAAG,EAAEC,OAAO;uBACtCD,GAAG,GAAGF,MAAM,CAACE,GAAG,CAAC,GAAGH,OAAO,CAACI,OAAO,CAAC;aAAA,CACrC;SAAA,CACF;KAAA,CACJ,CACF,CAACC,IAAI,CAAC,SAACD,OAAO;eAAKA,OAAO,CAACE,MAAM,CAAC,SAACC,KAAK,EAAEC,KAAK;mBAAKD,KAAK,CAACE,MAAM,CAACD,KAAK,CAAC;SAAA,CAAC;KAAA,CAAC,CAAA;CAC3E"}