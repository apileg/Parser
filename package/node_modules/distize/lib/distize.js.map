{"version":3,"sources":["../src/distize.ts"],"sourcesContent":["import { EventEmitter } from 'events'\nimport { resolve } from 'path'\n\nimport { copyNodeModules } from './copy-node-modules'\nimport { copySourceFiles } from './copy-source-files'\nimport { remove } from './utils/fs'\n\nexport interface DistizeOptions {\n  src: string[] | string\n  basePath?: string\n  out?: string\n  modulePath?: string\n  noClean?: boolean\n  noModules?: boolean\n  dev?: false\n}\n\nexport interface DistizeResult extends Promise<void> {\n  on(\n    event: 'progress',\n    listener: (\n      name: 'CLEAN' | 'COPY_SOURCE_FILES' | 'COPY_NODE_MODULES'\n    ) => void\n  ): this\n  on(event: 'copy', listener: (src: string, dest: string) => void): this\n  on(event: 'done', listener: () => void): this\n}\n\nexport function distize(options: DistizeOptions): DistizeResult {\n  const basePath = options.basePath ?? process.cwd()\n  const dest = resolve(basePath, options.out ?? 'dist')\n\n  const emitter = new EventEmitter()\n\n  function onCopy(src: string, dest: string) {\n    emitter.emit('copy', src, dest)\n  }\n\n  const promise = Promise.resolve()\n    .then(() => {\n      if (options.noClean) {\n        return Promise.resolve()\n      }\n      emitter.emit('progress', 'CLEAN')\n      return remove(dest)\n    })\n    .then(() => {\n      if (Array.isArray(options.src) && options.src.length === 0) {\n        return Promise.resolve()\n      }\n      emitter.emit('progress', 'COPY_SOURCE_FILES')\n      return copySourceFiles(options.src, dest, {\n        basePath: options.basePath,\n        onCopy,\n      })\n    })\n    .then(() => {\n      if (options.noModules) {\n        return Promise.resolve()\n      }\n      emitter.emit('progress', 'COPY_NODE_MODULES')\n      const modulePath =\n        (options.modulePath &&\n          resolve(\n            basePath,\n            options.modulePath.replace(/\\/node_modules\\/?$/, '')\n          )) ||\n        basePath\n\n      return remove(resolve(dest, 'node_modules')).then(() =>\n        copyNodeModules(dest, {\n          basePath: options.basePath,\n          cwd: modulePath,\n          devDeps: options.dev,\n          onCopy,\n        })\n      )\n    })\n    .then(() => {\n      emitter.emit('done')\n    })\n\n  Object.assign(promise, {\n    on(event: string, listener: any) {\n      emitter.on(event, listener)\n      return promise\n    },\n  })\n  return promise as DistizeResult\n}\n"],"names":["distize","options","onCopy","src","dest","emitter","emit","basePath","process","cwd","resolve","out","EventEmitter","promise","Promise","then","noClean","remove","Array","isArray","length","copySourceFiles","noModules","modulePath","replace","copyNodeModules","devDeps","dev","Object","assign","on","event","listener"],"mappings":"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"}